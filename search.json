[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 maplibre authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/maplibre.html","id":"basic-usage","dir":"Articles","previous_headings":"","what":"Basic usage","title":"maplibre","text":"render map call maplibre():","code":"maplibre()"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nico Friess. Author, maintainer, copyright holder. Stefan Kuethe. Author, copyright holder. Maplibre contributors. Copyright holder.           package offers R bindings Maplibre GL JS library.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Friess N, Kuethe S (2024). maplibre: R Bindings 'MapLibre GL JS'. R package version 0.1.0, https://github.com/eodaGmbH/r-maplibregl, https://eodagmbh.github.io/r-maplibregl.","code":"@Manual{,   title = {maplibre: R Bindings for 'MapLibre GL JS'},   author = {Nico Friess and Stefan Kuethe},   year = {2024},   note = {R package version 0.1.0, https://github.com/eodaGmbH/r-maplibregl},   url = {https://eodagmbh.github.io/r-maplibregl}, }"},{"path":"/index.html","id":"maplibre","dir":"","previous_headings":"","what":"R Bindings for MapLibre GL JS","title":"R Bindings for MapLibre GL JS","text":"goal maplibre make easy create elegant interactive maps RMarkdown documents Shiny applications.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R Bindings for MapLibre GL JS","text":"can install development version maplibre GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"eodaGmbH/r-maplibregl\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"R Bindings for MapLibre GL JS","text":"basic example shows solve common problem:","code":"library(maplibre) ## basic example code"},{"path":"/reference/Layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a layer — Layer","title":"Create a layer — Layer","text":"Create layer","code":""},{"path":"/reference/Layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a layer — Layer","text":"","code":"Layer(type, id, source = NULL, paint = NULL, layout = NULL, ...)"},{"path":"/reference/Layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a layer — Layer","text":"type type layer. id unique ID layer source name (unique ID) source source object used layer. paint paint properties layer. layout layout properties layer. ... Additional layer options","code":""},{"path":"/reference/Layer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a layer — Layer","text":"","code":"library(maplibre)  earthquakes_source <- list(   type = \"geojson\",   data = \"https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson\" )  earthquakes_layer <- Layer(   id = \"earthquakes\",   type = \"circle\",   source = earthquakes_source,   paint = list(\"circle-color\" = \"yellow\", \"circle-radius\" = 2) )  # Adds a tooltip that appears when hovering over it  maplibre() |>   add_layer(earthquakes_layer) |>   add_tooltip(\"earthquakes\", prop = \"mag\")  {\"x\":{\"mapOptions\":{\"style\":\"https://basemaps.cartocdn.com/gl/dark-matter-gl-style/style.json\"},\"calls\":[[\"addLayer\",[{\"type\":\"circle\",\"id\":\"earthquakes\",\"source\":{\"type\":\"geojson\",\"data\":\"https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson\"},\"paint\":{\"circle-color\":\"yellow\",\"circle-radius\":2}}]],[\"addTooltip\",[\"earthquakes\",\"mag\"]]]},\"evals\":[],\"jsHooks\":[]} # Adds a popup that appears when clicking on the layer  maplibre() |>   add_layer(earthquakes_layer) |>   add_popup(\"earthquakes\", prop = \"mag\")  {\"x\":{\"mapOptions\":{\"style\":\"https://basemaps.cartocdn.com/gl/dark-matter-gl-style/style.json\"},\"calls\":[[\"addLayer\",[{\"type\":\"circle\",\"id\":\"earthquakes\",\"source\":{\"type\":\"geojson\",\"data\":\"https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson\"},\"paint\":{\"circle-color\":\"yellow\",\"circle-radius\":2}}]],[\"addPopup\",[\"earthquakes\",\"mag\"]]]},\"evals\":[],\"jsHooks\":[]}"},{"path":"/reference/LayerType.html","id":null,"dir":"Reference","previous_headings":"","what":"Rendering types of layers — LayerType","title":"Rendering types of layers — LayerType","text":"Rendering types layers","code":""},{"path":"/reference/LayerType.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rendering types of layers — LayerType","text":"","code":"LayerType"},{"path":"/reference/LayerType.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Rendering types of layers — LayerType","text":"object class list length 9.","code":""},{"path":"/reference/LayerType.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rendering types of layers — LayerType","text":"Rendering types layers CIRCLE: filled circle. FILL: filled polygon optional stroked border. FILL_EXTRUSION: extruded polygon. LINE: stroked line. SYMBOL: icon text label. RASTER: Raster map textures satellite imagery. HEATMAP: heatmap. HILLSHADE: Client-side hillshading visualization based DEM data. BACKGROUND: background color pattern.","code":""},{"path":"/reference/Marker.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Marker — Marker","title":"Create a Marker — Marker","text":"Create Marker","code":""},{"path":"/reference/Marker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Marker — Marker","text":"","code":"Marker(lng_lat, popup = NULL, ...)"},{"path":"/reference/Marker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Marker — Marker","text":"lng_lat Longitude latitude coordinates marker, measured degrees based WGS84 (EPSG:4326) standard. popup Popup displayed user clicks marker. ... Additional marker options","code":""},{"path":"/reference/Marker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Marker — Marker","text":"","code":"marker <- Marker(   lng_lat = c(9.5, 51.31667),   popup = list(text = \"This is a marker\", options = list(closeButton = FALSE)),   color = \"darkred\" )  maplibre(mapOptions(center = c(9.5, 51.31667)), zoom = 4) |>   add_marker(marker)  {\"x\":{\"mapOptions\":{\"center\":[9.5,51.31667],\"style\":\"https://basemaps.cartocdn.com/gl/dark-matter-gl-style/style.json\",\"zoom\":4},\"calls\":[[\"addMarker\",[{\"lngLat\":[9.5,51.31667],\"popup\":{\"text\":\"This is a marker\",\"options\":{\"closeButton\":false}}}]]]},\"evals\":[],\"jsHooks\":[]}"},{"path":"/reference/MarkerOptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Marker Options — MarkerOptions","title":"Marker Options — MarkerOptions","text":"Marker Options","code":""},{"path":"/reference/MarkerOptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Marker Options — MarkerOptions","text":"","code":"MarkerOptions(   anchor = NULL,   color = NULL,   pitchAlignment = NULL,   rotationAlignment = NULL,   draggable = NULL,   rotation = NULL,   scale = NULL,   ... )"},{"path":"/reference/MarkerOptions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Marker Options — MarkerOptions","text":"anchor string indicating part Marker positioned closest coordinate set via Marker() function. Options 'center', 'top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right'. color color use default marker. default light blue. pitchAlignment map aligns Marker plane map. viewport aligns Marker plane viewport. auto automatically matches value rotationAlignment. rotationAlignment map aligns Marker's rotation relative map, maintaining bearing map rotates. viewport aligns Marker's rotation relative viewport, agnostic map rotations. auto equivalent viewport. draggable boolean indicating whether marker able dragged new position map. rotation rotation angle marker degrees, relative respective rotationAlignment setting. positive value rotate marker clockwise. scale scale use default marker. default scale corresponds height 41px width 27px. ... Additional marker options.","code":""},{"path":"/reference/MarkerOptions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Marker Options — MarkerOptions","text":"list marker options","code":""},{"path":"/reference/MarkerOptions.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Marker Options — MarkerOptions","text":"Parameter descriptions adapted Maplibre GL JS Project, please visit official documentation https://maplibre.org/maplibre-gl-js/docs/API/type-aliases/MarkerOptions/","code":""},{"path":"/reference/MarkerOptions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Marker Options — MarkerOptions","text":"","code":"marker <- Marker(   lng_lat = c(9.5, 51.31667),   popup = list(text = \"This is a marker\", options = list(closeButton = FALSE)),   color = \"darkred\" )  maplibre(mapOptions(center = c(9.5, 51.31667)), zoom = 4) |>   add_marker(marker)  {\"x\":{\"mapOptions\":{\"center\":[9.5,51.31667],\"style\":\"https://basemaps.cartocdn.com/gl/dark-matter-gl-style/style.json\",\"zoom\":4},\"calls\":[[\"addMarker\",[{\"lngLat\":[9.5,51.31667],\"popup\":{\"text\":\"This is a marker\",\"options\":{\"closeButton\":false}}}]]]},\"evals\":[],\"jsHooks\":[]}"},{"path":"/reference/add_call.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a map method to a Map widget. — add_call","title":"Add a map method to a Map widget. — add_call","text":"Add map method Map widget.","code":""},{"path":"/reference/add_call.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a map method to a Map widget. — add_call","text":"","code":"add_call(.map, .name, ...)"},{"path":"/reference/add_call.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a map method to a Map widget. — add_call","text":".map maplibre() HTML widget .name name map method executed ... arguments passed map method.","code":""},{"path":"/reference/add_call.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a map method to a Map widget. — add_call","text":"updated maplibre() HTML widget","code":""},{"path":"/reference/add_call.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a map method to a Map widget. — add_call","text":"","code":"map_options <- mapOptions(   center = c(-123.1256, 49.24658),   hash = TRUE,   pitch = 0,   style = basemaps$carto$dark_matter   )  # add control uses add_call to add a control to the map widget maplibre(map_options, zoom = 12) |>   add_control(\"NavigationControl\", \"top-left\", showCompass = FALSE)  {\"x\":{\"mapOptions\":{\"center\":[-123.1256,49.24658],\"hash\":true,\"pitch\":0,\"style\":\"https://basemaps.cartocdn.com/gl/dark-matter-gl-style/style.json\",\"zoom\":12},\"calls\":[[\"addControl\",[\"NavigationControl\",{\"showCompass\":false},\"top-left\"]]]},\"evals\":[],\"jsHooks\":[]} # this is equal to: maplibre(map_options, zoom = 12) |>   add_call(\"addControl\", \"NavigationControl\", list(showCompass = FALSE), \"top-left\")  {\"x\":{\"mapOptions\":{\"center\":[-123.1256,49.24658],\"hash\":true,\"pitch\":0,\"style\":\"https://basemaps.cartocdn.com/gl/dark-matter-gl-style/style.json\",\"zoom\":12},\"calls\":[[\"addControl\",[\"NavigationControl\",{\"showCompass\":false},\"top-left\"]]]},\"evals\":[],\"jsHooks\":[]}"},{"path":"/reference/add_control.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a control to a Map widget — add_control","title":"Add a control to a Map widget — add_control","text":"Add control Map widget","code":""},{"path":"/reference/add_control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a control to a Map widget — add_control","text":"","code":"add_control(   .map,   control_name = c(\"NavigationControl\", \"ScaleControl\", \"FullscreenControl\",     \"GeolocateControl\", \"AttributionControl\"),   control_position = c(\"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\"),   ... )"},{"path":"/reference/add_control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a control to a Map widget — add_control","text":".map maplibre() HTML widget control_name name control control_position position control. ... Control options depending type control.","code":""},{"path":"/reference/add_control.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a control to a Map widget — add_control","text":"updated maplibre() HTML widget","code":""},{"path":"/reference/add_control.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a control to a Map widget — add_control","text":"","code":"map_options <- mapOptions(   center = c(-123.1256, 49.24658),   hash = TRUE,   pitch = 0,   style = basemaps$carto$dark_matter   )  # add control uses add_call to add a control to the map widget maplibre(map_options, zoom = 12) |>   add_control(\"NavigationControl\", \"top-left\", showCompass = FALSE)  {\"x\":{\"mapOptions\":{\"center\":[-123.1256,49.24658],\"hash\":true,\"pitch\":0,\"style\":\"https://basemaps.cartocdn.com/gl/dark-matter-gl-style/style.json\",\"zoom\":12},\"calls\":[[\"addControl\",[\"NavigationControl\",{\"showCompass\":false},\"top-left\"]]]},\"evals\":[],\"jsHooks\":[]} # this is equal to: maplibre(map_options, zoom = 12) |>   add_call(\"addControl\", \"NavigationControl\", list(showCompass = FALSE), \"top-left\")  {\"x\":{\"mapOptions\":{\"center\":[-123.1256,49.24658],\"hash\":true,\"pitch\":0,\"style\":\"https://basemaps.cartocdn.com/gl/dark-matter-gl-style/style.json\",\"zoom\":12},\"calls\":[[\"addControl\",[\"NavigationControl\",{\"showCompass\":false},\"top-left\"]]]},\"evals\":[],\"jsHooks\":[]}"},{"path":"/reference/add_deck_layers.html","id":null,"dir":"Reference","previous_headings":"","what":"Add deck.gl layers to the map — add_deck_layers","title":"Add deck.gl layers to the map — add_deck_layers","text":"Add deck.gl layers map","code":""},{"path":"/reference/add_deck_layers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add deck.gl layers to the map — add_deck_layers","text":"","code":"add_deck_layers(.map, layers, tooltip = NULL)"},{"path":"/reference/add_deck_layers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add deck.gl layers to the map — add_deck_layers","text":".map maplibre() HTML widget layers list deck.gl layers. tooltip Either single mustache template string applied layers dictionary keys layer ids values mustache template strings.","code":""},{"path":"/reference/add_deck_layers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add deck.gl layers to the map — add_deck_layers","text":"updated maplibre() HTML widget","code":""},{"path":"/reference/add_deck_layers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add deck.gl layers to the map — add_deck_layers","text":"","code":"deck_grid_layer <- list(   \"@@type\" = \"GridLayer\",   id = \"GridLayer\",   data = \"https://raw.githubusercontent.com/visgl/deck.gl-data/master/website/sf-bike-parking.json\",   extruded = TRUE,   getPosition = \"@@=COORDINATES\",   getColorWeight = \"@@=SPACES\",   getElevationWeight = \"@@=SPACES\",   elevationScale = 4,   cellSize = 200,   pickable = TRUE )  setup <- mapOptions(   center = c(-122.4, 37.74),   zoom = 12,   pitch = 40,   hash = TRUE )  maplibre(setup, deck = TRUE) |>   add_deck_layers(list(deck_grid_layer))  {\"x\":{\"mapOptions\":{\"center\":[-122.4,37.74],\"hash\":true,\"pitch\":40,\"style\":\"https://basemaps.cartocdn.com/gl/dark-matter-gl-style/style.json\",\"zoom\":12},\"calls\":[[\"addDeckOverlay\",[[{\"@@type\":\"GridLayer\",\"id\":\"GridLayer\",\"data\":\"https://raw.githubusercontent.com/visgl/deck.gl-data/master/website/sf-bike-parking.json\",\"extruded\":true,\"getPosition\":\"@@=COORDINATES\",\"getColorWeight\":\"@@=SPACES\",\"getElevationWeight\":\"@@=SPACES\",\"elevationScale\":4,\"cellSize\":200,\"pickable\":true}]]]]},\"evals\":[],\"jsHooks\":[]}"},{"path":"/reference/add_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a layer to map — add_layer","title":"Add a layer to map — add_layer","text":"Add layer map","code":""},{"path":"/reference/add_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a layer to map — add_layer","text":"","code":"add_layer(.map, layer, before_id = NULL)"},{"path":"/reference/add_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a layer to map — add_layer","text":".map maplibre() HTML widget layer Layer() object before_id ID existing layer insert new layer , resulting new layer appearing visually beneath existing layer. None, new layer appear layers.","code":""},{"path":"/reference/add_layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a layer to map — add_layer","text":"updated maplibre() HTML widget","code":""},{"path":"/reference/add_layer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a layer to map — add_layer","text":"","code":"library(maplibre)  earthquakes_source <- list(   type = \"geojson\",   data = \"https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson\" )  earthquakes_layer <- Layer(   id = \"earthquakes\",   type = \"circle\",   source = earthquakes_source,   paint = list(\"circle-color\" = \"yellow\", \"circle-radius\" = 2) )  # Adds a tooltip that appears when hovering over it  maplibre() |>   add_layer(earthquakes_layer) |>   add_tooltip(\"earthquakes\", prop = \"mag\")  {\"x\":{\"mapOptions\":{\"style\":\"https://basemaps.cartocdn.com/gl/dark-matter-gl-style/style.json\"},\"calls\":[[\"addLayer\",[{\"type\":\"circle\",\"id\":\"earthquakes\",\"source\":{\"type\":\"geojson\",\"data\":\"https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson\"},\"paint\":{\"circle-color\":\"yellow\",\"circle-radius\":2}}]],[\"addTooltip\",[\"earthquakes\",\"mag\"]]]},\"evals\":[],\"jsHooks\":[]} # Adds a popup that appears when clicking on the layer  maplibre() |>   add_layer(earthquakes_layer) |>   add_popup(\"earthquakes\", prop = \"mag\")  {\"x\":{\"mapOptions\":{\"style\":\"https://basemaps.cartocdn.com/gl/dark-matter-gl-style/style.json\"},\"calls\":[[\"addLayer\",[{\"type\":\"circle\",\"id\":\"earthquakes\",\"source\":{\"type\":\"geojson\",\"data\":\"https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson\"},\"paint\":{\"circle-color\":\"yellow\",\"circle-radius\":2}}]],[\"addPopup\",[\"earthquakes\",\"mag\"]]]},\"evals\":[],\"jsHooks\":[]}"},{"path":"/reference/add_marker.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a marker to map — add_marker","title":"Add a marker to map — add_marker","text":"Add marker map","code":""},{"path":"/reference/add_marker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a marker to map — add_marker","text":"","code":"add_marker(.map, marker)"},{"path":"/reference/add_marker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a marker to map — add_marker","text":".map maplibre() HTML widget marker marker object defined using Marker()","code":""},{"path":"/reference/add_marker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a marker to map — add_marker","text":"","code":"marker <- Marker(   lng_lat = c(9.5, 51.31667),   popup = list(text = \"This is a marker\", options = list(closeButton = FALSE)),   color = \"darkred\" )  maplibre(mapOptions(center = c(9.5, 51.31667)), zoom = 4) |>   add_marker(marker)  {\"x\":{\"mapOptions\":{\"center\":[9.5,51.31667],\"style\":\"https://basemaps.cartocdn.com/gl/dark-matter-gl-style/style.json\",\"zoom\":4},\"calls\":[[\"addMarker\",[{\"lngLat\":[9.5,51.31667],\"popup\":{\"text\":\"This is a marker\",\"options\":{\"closeButton\":false}}}]]]},\"evals\":[],\"jsHooks\":[]}"},{"path":"/reference/add_popup.html","id":null,"dir":"Reference","previous_headings":"","what":"Add popup property to layer — add_popup","title":"Add popup property to layer — add_popup","text":"Add popup property layer","code":""},{"path":"/reference/add_popup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add popup property to layer — add_popup","text":"","code":"add_popup(.map, layer_id, prop = NULL, template = NULL)"},{"path":"/reference/add_popup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add popup property to layer — add_popup","text":".map maplibre() HTML widget layer_id layer popup added. prop property source displayed. None, properties displayed. template mustache template. supplied, prop ignored.","code":""},{"path":"/reference/add_popup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add popup property to layer — add_popup","text":"updated maplibre() HTML widget","code":""},{"path":"/reference/add_popup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add popup property to layer — add_popup","text":"","code":"library(maplibre)  earthquakes_source <- list(   type = \"geojson\",   data = \"https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson\" )  earthquakes_layer <- Layer(   id = \"earthquakes\",   type = \"circle\",   source = earthquakes_source,   paint = list(\"circle-color\" = \"yellow\", \"circle-radius\" = 2) )  # Adds a tooltip that appears when hovering over it  maplibre() |>   add_layer(earthquakes_layer) |>   add_tooltip(\"earthquakes\", prop = \"mag\")  {\"x\":{\"mapOptions\":{\"style\":\"https://basemaps.cartocdn.com/gl/dark-matter-gl-style/style.json\"},\"calls\":[[\"addLayer\",[{\"type\":\"circle\",\"id\":\"earthquakes\",\"source\":{\"type\":\"geojson\",\"data\":\"https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson\"},\"paint\":{\"circle-color\":\"yellow\",\"circle-radius\":2}}]],[\"addTooltip\",[\"earthquakes\",\"mag\"]]]},\"evals\":[],\"jsHooks\":[]} # Adds a popup that appears when clicking on the layer  maplibre() |>   add_layer(earthquakes_layer) |>   add_popup(\"earthquakes\", prop = \"mag\")  {\"x\":{\"mapOptions\":{\"style\":\"https://basemaps.cartocdn.com/gl/dark-matter-gl-style/style.json\"},\"calls\":[[\"addLayer\",[{\"type\":\"circle\",\"id\":\"earthquakes\",\"source\":{\"type\":\"geojson\",\"data\":\"https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson\"},\"paint\":{\"circle-color\":\"yellow\",\"circle-radius\":2}}]],[\"addPopup\",[\"earthquakes\",\"mag\"]]]},\"evals\":[],\"jsHooks\":[]}"},{"path":"/reference/add_tooltip.html","id":null,"dir":"Reference","previous_headings":"","what":"Add tooltip property to layer — add_tooltip","title":"Add tooltip property to layer — add_tooltip","text":"Add tooltip property layer","code":""},{"path":"/reference/add_tooltip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add tooltip property to layer — add_tooltip","text":"","code":"add_tooltip(.map, layer_id, prop = NULL, template = NULL)"},{"path":"/reference/add_tooltip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add tooltip property to layer — add_tooltip","text":".map maplibre() HTML widget layer_id layer popup added. prop property source displayed. None, properties displayed. template mustache template. supplied, prop ignored.","code":""},{"path":"/reference/add_tooltip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add tooltip property to layer — add_tooltip","text":"updated maplibre() HTML widget","code":""},{"path":"/reference/add_tooltip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add tooltip property to layer — add_tooltip","text":"","code":"library(maplibre)  earthquakes_source <- list(   type = \"geojson\",   data = \"https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson\" )  earthquakes_layer <- Layer(   id = \"earthquakes\",   type = \"circle\",   source = earthquakes_source,   paint = list(\"circle-color\" = \"yellow\", \"circle-radius\" = 2) )  # Adds a tooltip that appears when hovering over it  maplibre() |>   add_layer(earthquakes_layer) |>   add_tooltip(\"earthquakes\", prop = \"mag\")  {\"x\":{\"mapOptions\":{\"style\":\"https://basemaps.cartocdn.com/gl/dark-matter-gl-style/style.json\"},\"calls\":[[\"addLayer\",[{\"type\":\"circle\",\"id\":\"earthquakes\",\"source\":{\"type\":\"geojson\",\"data\":\"https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson\"},\"paint\":{\"circle-color\":\"yellow\",\"circle-radius\":2}}]],[\"addTooltip\",[\"earthquakes\",\"mag\"]]]},\"evals\":[],\"jsHooks\":[]} # Adds a popup that appears when clicking on the layer  maplibre() |>   add_layer(earthquakes_layer) |>   add_popup(\"earthquakes\", prop = \"mag\")  {\"x\":{\"mapOptions\":{\"style\":\"https://basemaps.cartocdn.com/gl/dark-matter-gl-style/style.json\"},\"calls\":[[\"addLayer\",[{\"type\":\"circle\",\"id\":\"earthquakes\",\"source\":{\"type\":\"geojson\",\"data\":\"https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson\"},\"paint\":{\"circle-color\":\"yellow\",\"circle-radius\":2}}]],[\"addPopup\",[\"earthquakes\",\"mag\"]]]},\"evals\":[],\"jsHooks\":[]}"},{"path":"/reference/basemaps.html","id":null,"dir":"Reference","previous_headings":"","what":"A list of basemap style URLs — basemaps","title":"A list of basemap style URLs — basemaps","text":"list basemap style URLs","code":""},{"path":"/reference/basemaps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A list of basemap style URLs — basemaps","text":"","code":"basemaps"},{"path":"/reference/basemaps.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A list of basemap style URLs — basemaps","text":"object class list length 1.","code":""},{"path":"/reference/construct_basemap_style.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a basemap style definition — construct_basemap_style","title":"Create a basemap style definition — construct_basemap_style","text":"Create basemap style definition","code":""},{"path":"/reference/construct_basemap_style.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a basemap style definition — construct_basemap_style","text":"","code":"construct_basemap_style(sources, layers, name = \"custom-basemap\")"},{"path":"/reference/construct_basemap_style.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a basemap style definition — construct_basemap_style","text":"sources sources used basemap style. layers layers used basemap style. name name basemap style.","code":""},{"path":"/reference/construct_basemap_style.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a basemap style definition — construct_basemap_style","text":"list","code":""},{"path":"/reference/construct_basemap_style.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a basemap style definition — construct_basemap_style","text":"","code":"PMTILES_URL <- \"https://pmtiles.io/protomaps(vector)ODbL_firenze.pmtiles\"  pmtiles_source <- list(   type = \"vector\",   url = glue::glue(\"pmtiles://{PMTILES_URL}\"),   attribution = '© <a href=\"https://openstreetmap.org\">OpenStreetMap<\/a>' )  sources <- list(pmtiles = pmtiles_source)  landuse <- Layer(   id = \"buildings\",   source = \"pmtiles\",   \"source-layer\" = \"landuse\",   type = LayerType$FILL,   paint = list(\"fill-color\" = \"steelblue\") )  roads <- Layer(   id = \"roads\",   source = \"pmtiles\",   \"source-layer\" = \"roads\",   type = LayerType$LINE,   paint = list(\"line-color\" = \"black\"), )  custom_basemap <- construct_basemap_style(   sources,   layers = list(landuse, roads) )  setup <- mapOptions(   style = custom_basemap,   bounds = list(11.154026, 43.7270125, 11.3289395, 43.8325455) )  maplibre(setup)  {\"x\":{\"mapOptions\":{\"bounds\":[11.154026,43.7270125,11.3289395,43.8325455],\"style\":{\"name\":\"custom-basemap\",\"version\":8,\"sources\":{\"pmtiles\":{\"type\":\"vector\",\"url\":\"pmtiles://https://pmtiles.io/protomaps(vector)ODbL_firenze.pmtiles\",\"attribution\":\"© <a href=\\\"https://openstreetmap.org\\\">OpenStreetMap<\\/a>\"}},\"layers\":[{\"type\":\"fill\",\"id\":\"buildings\",\"source\":\"pmtiles\",\"paint\":{\"fill-color\":\"steelblue\"},\"source-layer\":\"landuse\"},{\"type\":\"line\",\"id\":\"roads\",\"source\":\"pmtiles\",\"paint\":{\"line-color\":\"black\"},\"source-layer\":\"roads\"}]}},\"calls\":[]},\"evals\":[],\"jsHooks\":[]}"},{"path":"/reference/mapOptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Map Options to a Map Object — mapOptions","title":"Add Map Options to a Map Object — mapOptions","text":"Add Map Options Map Object","code":""},{"path":"/reference/mapOptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Map Options to a Map Object — mapOptions","text":"","code":"mapOptions(   style = maplibre::basemaps$carto$dark_matter,   antialias = NULL,   attribution_control = NULL,   bearing = NULL,   bearing_snap = NULL,   bounds = NULL,   box_zoom = NULL,   center = NULL,   click_tolerance = NULL,   double_click_zoom = NULL,   fade_duration = NULL,   fit_bounds_options = NULL,   hash = NULL,   interactive = NULL,   keyboard = NULL,   maplibre_logo = NULL,   max_bounds = NULL,   max_pitch = NULL,   max_zoom = NULL,   min_pitch = NULL,   min_zoom = NULL,   pitch = NULL,   scroll_zoom = NULL,   zoom = NULL,   ... )"},{"path":"/reference/mapOptions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Map Options to a Map Object — mapOptions","text":"style map's MapLibre style. must JSON object conforming schema described MapLibre Style Specification, URL JSON. antialias TRUE, gl context created MSAA antialiasing, can useful antialiasing custom layers. Disabled default performance optimization. attribution_control set, AttributionControl added map provided options. disable attribution control, pass false. Note: showing logo MapLibre required using MapLibre. bearing initial bearing (rotation) map, measured degrees counter-clockwise north. bearing specified constructor options, MapLibre GL JS look map's style object. specified style, either, default 0. bearing_snap threshold, measured degrees, determines map's bearing snap north. example, bearingSnap 7, user rotates map within 7 degrees north, map automatically snap exact north. bounds initial bounds map. bounds specified, overrides center zoom constructor options. box_zoom TRUE, \"box zoom\" interaction enabled center initial geographical centerpoint map. center specified constructor options, MapLibre GL JS look map's style object. specified style, either, default (0, 0) Note: MapLibre GL JS uses longitude, latitude coordinate order (opposed latitude, longitude) match GeoJSON. click_tolerance max number pixels user can shift mouse pointer click considered valid click (opposed mouse drag). double_click_zoom TRUE, \"double click zoom\" interaction enabled fade_duration Controls duration fade-/fade-animation label collisions initial map load, milliseconds. setting affects symbol layers. setting affect duration runtime styling transitions raster tile cross-fading. fit_bounds_options FitBoundsOptions options object use fitting initial bounds provided . hash TRUE, map's position (zoom, center latitude, center longitude, bearing, pitch) synced hash fragment page's URL. example, http://path///page.html#2.59/39.26/53.07/-24.1/60. additional string may optionally provided indicate parameter-styled hash, e.g. http://path///page.html#map=2.59/39.26/53.07/-24.1/60&foo=bar, foo custom parameter bar arbitrary hash distinct map hash. interactive FALSE, mouse, touch, keyboard listeners attached map, respond interaction. keyboard TRUE, keyboard shortcuts enabled maplibre_logo TRUE, MapLibre logo shown. max_bounds set, map constrained given bounds. max_pitch maximum pitch map (0-85). Values greater 60 degrees experimental may result rendering issues. max_zoom maximum zoom level map (0-24). min_pitch minimum pitch map (0-85). Values greater 60 degrees experimental may result rendering issues. min_zoom minimum zoom level map (0-24). pitch initial pitch (tilt) map, measured degrees away plane screen (0-85). pitch specified constructor options, MapLibre GL JS look map's style object. specified style, either, default 0. Values greater 60 degrees experimental may result rendering issues. scroll_zoom TRUE, \"scroll zoom\" interaction enabled. zoom initial zoom level map. zoom specified constructor options, MapLibre GL JS look map's style object. specified style, either, default 0. ... Additional parameters","code":""},{"path":"/reference/mapOptions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Map Options to a Map Object — mapOptions","text":"list map options.","code":""},{"path":"/reference/mapOptions.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Add Map Options to a Map Object — mapOptions","text":"Parameter descriptions adapted Maplibre GL JS Project, please visit official documentation https://maplibre.org/maplibre-gl-js/docs/API/type-aliases/MapOptions/","code":""},{"path":"/reference/mapOptions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Map Options to a Map Object — mapOptions","text":"","code":"map_options <- mapOptions(   center = c(-123.1256, 49.24658),   hash = TRUE,   pitch = 0,   style = basemaps$carto$dark_matter   )  # add control uses add_call to add a control to the map widget maplibre(map_options, zoom = 12) |>   add_control(\"NavigationControl\", \"top-left\", showCompass = FALSE)  {\"x\":{\"mapOptions\":{\"center\":[-123.1256,49.24658],\"hash\":true,\"pitch\":0,\"style\":\"https://basemaps.cartocdn.com/gl/dark-matter-gl-style/style.json\",\"zoom\":12},\"calls\":[[\"addControl\",[\"NavigationControl\",{\"showCompass\":false},\"top-left\"]]]},\"evals\":[],\"jsHooks\":[]} # this is equal to: maplibre(map_options, zoom = 12) |>   add_call(\"addControl\", \"NavigationControl\", list(showCompass = FALSE), \"top-left\")  {\"x\":{\"mapOptions\":{\"center\":[-123.1256,49.24658],\"hash\":true,\"pitch\":0,\"style\":\"https://basemaps.cartocdn.com/gl/dark-matter-gl-style/style.json\",\"zoom\":12},\"calls\":[[\"addControl\",[\"NavigationControl\",{\"showCompass\":false},\"top-left\"]]]},\"evals\":[],\"jsHooks\":[]}"},{"path":"/reference/maplibre-shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny bindings for maplibre — maplibre-shiny","title":"Shiny bindings for maplibre — maplibre-shiny","text":"Output render functions using maplibre within Shiny applications interactive Rmd documents.","code":""},{"path":"/reference/maplibre-shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny bindings for maplibre — maplibre-shiny","text":"","code":"maplibreOutput(outputId, width = \"100%\", height = \"400px\")  renderMaplibre(expr, env = parent.frame(), quoted = FALSE)"},{"path":"/reference/maplibre-shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny bindings for maplibre — maplibre-shiny","text":"outputId output variable read width, height Must valid CSS unit (like '100%', '400px', 'auto') number, coerced string 'px' appended. expr expression generates maplibre env environment evaluate expr. quoted expr quoted expression (quote())? useful want save expression variable.","code":""},{"path":"/reference/maplibre.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Map Object for MapLibre GL — maplibre","title":"Create a Map Object for MapLibre GL — maplibre","text":"Create Map Object MapLibre GL","code":""},{"path":"/reference/maplibre.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Map Object for MapLibre GL — maplibre","text":"","code":"maplibre(   map_options = mapOptions(),   deck = FALSE,   width = \"100%\",   height = NULL,   element_id = NULL,   ... )"},{"path":"/reference/maplibre.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Map Object for MapLibre GL — maplibre","text":"map_options mapOptions() deck Whether add deck.gl HTML dependency. width, height width height widget. element_id unique ID widgets's HTML element. ... map options.","code":""},{"path":"/reference/maplibre.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Map Object for MapLibre GL — maplibre","text":"","code":"map_options <- mapOptions(   center = c(-123.1256, 49.24658),   hash = TRUE,   pitch = 0,   style = basemaps$carto$dark_matter   )  # add control uses add_call to add a control to the map widget maplibre(map_options, zoom = 12) |>   add_control(\"NavigationControl\", \"top-left\", showCompass = FALSE)  {\"x\":{\"mapOptions\":{\"center\":[-123.1256,49.24658],\"hash\":true,\"pitch\":0,\"style\":\"https://basemaps.cartocdn.com/gl/dark-matter-gl-style/style.json\",\"zoom\":12},\"calls\":[[\"addControl\",[\"NavigationControl\",{\"showCompass\":false},\"top-left\"]]]},\"evals\":[],\"jsHooks\":[]} # this is equal to: maplibre(map_options, zoom = 12) |>   add_call(\"addControl\", \"NavigationControl\", list(showCompass = FALSE), \"top-left\")  {\"x\":{\"mapOptions\":{\"center\":[-123.1256,49.24658],\"hash\":true,\"pitch\":0,\"style\":\"https://basemaps.cartocdn.com/gl/dark-matter-gl-style/style.json\",\"zoom\":12},\"calls\":[[\"addControl\",[\"NavigationControl\",{\"showCompass\":false},\"top-left\"]]]},\"evals\":[],\"jsHooks\":[]}"},{"path":"/news/index.html","id":"maplibre-010","dir":"Changelog","previous_headings":"","what":"maplibre 0.1.0","title":"maplibre 0.1.0","text":"Add NEWS.md track changes.","code":""}]
